source('/mnt/c/Users/adaha/OneDrive/Desktop/Black_Micro_Assoc/BIMW_2021/code/load_campaign_data.R')
#data aggregated by day
bim_week_daily <- BIM_tweet_metrics %>%
gather(impressions:`media engagements`, key = "Metric", value = "Value") %>%
mutate(Date = date(time))
setwd("~/digest_curation")
library(tidyverse)
library(gmailr)
library(jsonlite)
library(rvest)
library(xml2)
date()
gm_date()
gm_auth_configure(path = "permissions/client_secret.json")
#gm_auth(cache = "permissions/.secret")
gm_auth(email = TRUE, cache = "permissions/.secret")
#Google scholar alerts----
gs_message_list <- gm_messages(search = "from:scholaralerts-noreply@google.com", num_results = 500) #identify correct emails
unlist_gs_message <- gs_message_list %>% unlist(., FALSE) %>% unlist(., FALSE)
message_gs_ids <- unlist_gs_message %>%
as_tibble(.name_repair = "universal", rownames = "NA") %>%
gather("message", "id") %>%
mutate(id = unlist(id)) %>%
filter(str_detect(message, "message") == TRUE) %>%
distinct() %>% pull(id)
#function to pull list information from google scholar alerts----
get_scholar_links <- function(x){
print(x)
x <- gm_message(x, format = "full")
x_body <- gm_body(x, format = FULL, type = "text/html") %>% unlist()
x_html <- read_html(x_body)
title <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
author <- x_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
link <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
#clean_link <- mutate(link, url = str_replace(url, "http://scholar\\.google\\.com/scholar_url\\?url=", "") %>%
#str_extract("[:graph:]+(?=&hl=)"))
merge_df <- cbind(title, author, link) #%>% filter(str_detect(url, has_doi) == TRUE)
return(merge_df)
}
all_google_links <- map_dfr(message_gs_ids, get_scholar_links)
View(gs_message_list)
message_gs_ids
get_scholar_links(message_gs_ids[[1]])
get_scholar_links(message_gs_ids[[2]])
#authtication settings ----
gm_auth_configure(path = "permissions/client_secret.json")
gm_auth(email = TRUE, cache = "permissions/.secret")
gs_message_list <- gm_messages(search = "from:scholaralerts-noreply@google.com", num_results = 500) #identify correct emails
View(unlist_gs_message)
message_gs_ids <- unlist_gs_message %>%
as_tibble(.name_repair = "universal", rownames = "NA")
View(message_gs_ids)
message_gs_ids <- unlist_gs_message %>%
as_tibble(.name_repair = "universal", rownames = "NA") %>%
gather("message", "id") %>%
mutate(id = unlist(id))
x = 17de3a7d78332905
x<-"17de3a7d78332905"
test <- gm_message(x, format = "full")
View(test)
test_html <- gm_body(test, format = FULL, type = "text/html") %>% unlist() %>% read_html(.)
View(test_html)
test_title <- test_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
View(test_title)
test_author <- test_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
test_link <- test_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
View(test_author)
length(title)
length(test_title)
View(test_title)
num(test_title)
n(test_title)
count(test_title)
nrow(test_title)
nrow(title) == nrow(author) == nrow(link)
nrow(title) = nrow(author) = nrow(link)
nrow(test_title) = nrow(test_author) = nrow(test_link)
nrow(test_title) = nrow(test_author)
nrow(test_title) = nrow(test_author)
nrow(test_title) == nrow(test_author) &  nrow(test_title) == nrow(test_link) & nrow(test_author) == nrow(test_link)
?max_width
max_height(c(test_author, test_link, test_title))
max_width(c(test_author, test_link, test_title))
test_attribute_df <- tibble(title = nrow(test_title), author = nrow(test_author), link = nrow(test_link))
View(test_attribute_df)
max(test_attribute_df)
min(test_attribute_df)
colnames(test_attribute_df)[max.col(test_attribute_df,ties.method="first")]
colnames(test_attribute_df)[min.col(test_attribute_df,ties.method="first")]
?max.col
colnames(test_attribute_df)[which.min(apply(test_attribute_df,MARGIN=2,min))]
test_short_col <- colnames(test_attribute_df)[which.min(apply(test_attribute_df,MARGIN=2,min))]
test_fix_short <- get("test_short_col") %>% add_row(., 0)
test_fix_short <- get("test_short_col") %>% add_row(., short_col, 0)
test_fix_short <- get("test_short_col") %>% add_row(., test_short_col, 0)
test_fix_short <- get("test_short_col") %>% add_row(., sym(test_short_col), 0)
?sym
get(test_short_col)
get("test_short_col")
test_short_col <- "test_author"
test_fix_short <- get("test_short_col") %>% add_row(., test_short_col, 0)
get("test_short_col")
get(test_short_col)
test_fix_short <- get(test_short_col) %>% add_row(., test_short_col, 0)
test_fix_short <- get(test_short_col) %>% add_row(test_short_col, 0)
?add_row
View(test_author)
test_fix_short <- get(test_short_col) %>% add_row(test_short_col = 0)
test_fix_short <- get(test_short_col) %>% add_row("test_short_col" = 0)
test_fix_short <- get(test_short_col) %>% add_row(get("test_short_col") = 0)
test_fix_short <- add_row(get(test_short_col), get("test_short_col") = 0)
test_fix_short <- add_row(get(test_short_col), "0")
test_fix_short <- add_row(get(test_short_col), get("test_short_col") = "0")
test_fix_short <- add_row(get(test_short_col), get("test_short_col") == "0")
test_fix_short <- tibble_row(get(test_short_col), get("test_short_col") == "0")
test_fix_short <- tibble_row(get(test_short_col), get("test_short_col") = "0")
test_fix_short <- get(test_short_col) %>% tibble_row(get("test_short_col") == "0")
test_fix_short <- get(test_short_col) %>% tibble_row("0")
test_fix_short <- get(test_short_col) %>% tibble_row(., "0")
str(get(test_short_col))
str(get("test_short_col"))
test_fix_short <- get(test_short_col) %>% as_tibble_row(., "0")
test_fix_short <- get(test_short_col) %>% as_tibble_row("0")
as_tibble_row("0")
test_fix_short <- get(test_short_col) %>% rbind("0")
test_fix_short <- get(test_short_col) %>% map(num_rows, function(){rbind("0")})
test_num_rows = 3
test_fix_short <- get(test_short_col) %>% map(num_rows, function(){rbind("0")})
test_fix_short <- get(test_short_col) %>% map(test_num_rows, function(){rbind("0")})
View(test_fix_short)
?map
?repeat
?
)
?repeat
)
test_fix_short <- get(test_short_col) %>% replicate(test_num_rows, rbind("0"))
test_num_rows
test_fix_short <- get(test_short_col) %>% replicate(test_num_rows, rbind(., "0"))
test_fix_short <- get(test_short_col) %>% replicate(as.numerical(test_num_rows), rbind("0"))
test_fix_short <- get(test_short_col) %>% replicate(as.integer(test_num_rows), rbind("0"))
?replicate
replicate(as.integer(test_num_rows), rbind("0"))
get(test_short_col) %>% replicate(as.integer(test_num_rows), rbind("0"))
replicate(as.integer(test_num_rows), rbind(""))
replicate(test_num_rows, rbind(""))
replicate(test_num_rows, rbind())
get(test_short_col) %>% replicate(as.integer(test_num_rows), rbind())
get(test_short_col) %>% replicate(as.integer(test_num_rows), rbind() %>% unlist())
replicate(test_num_rows, rbind()) %>% as.list()
test_empty_col <- replicate(test_num_rows, rbind()) %>% as.list()
test_fix_short <- get(test_short_col) %>% rbind(test_empty_col)
View(test_fix_short)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as.list()
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as.tibble()
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble()
test_fix_short <- get(test_short_col) %>% rbind(test_empty_col)
View(test_empty_col)
test_empty_col <- as_tibble(replicate(test_num_rows, rbind("")))
View(test_empty_col)
test_empty_col <- as_tibble(get("short_col") = replicate(test_num_rows, rbind("")))
?as_tibble
test_empty_col <- as_tibble(.rows = num_rows, column_name = get("short_col"))
test_empty_col <- as_tibble(.rows = test_num_rows, column_name = get("test_short_col"))
test_empty_col <- as_tibble(get(test_short_col), .rows = test_num_rows, column_name = get("test_short_col"))
View(test_empty_col)
test_empty_col <- as_tibble_row(.rows = test_num_rows, column_name = get("test_short_col"))
test_empty_col <- as_tibble_row(0, .rows = test_num_rows, column_name = get("test_short_col"))
test_empty_col <- as_tibble_row(.rows = test_num_rows, column_name = get("test_short_col"))
test_empty_col <- as_tibble(.rows = test_num_rows, column_name = get("test_short_col"))
test_empty_col <- as_tibble(get("short_col") = replicate(test_num_rows, rbind("")))
test_empty_col <- replicate(test_num_rows, rbind("")))
test_empty_col <- replicate(test_num_rows, rbind(""))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., column_name = get("test_short_col"))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., column_name = test_short_col))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., column_name = test_short_col)
sym(test_short_col)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., column_name = sym(test_short_col))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(.)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(.)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = sym(test_short_col))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = vec_as_names(c(sym(test_short_col))))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = vctrs::vec_as_names(c(sym(test_short_col))))
sym(test_short_col)
!sym(test_short_col)
as.character(sym(test_short_col))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = vctrs::vec_as_names(c(as.character(sym(test_short_col)))))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = "minimal"))
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_row(., .name_repair = "minimal")
View(test_empty_col)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_col(., .name_repair = "minimal")
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_col(.)
View(test_empty_col)
test_empty_col <- replicate(test_num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(test_short_col)))
View(test_empty_col)
test_fix_short <- get(test_short_col) %>% rbind(test_empty_col)
test_short_col
test_empty_col
test_fix_short <- get(test_short_col) %>% cbind(test_empty_col)
test_fix_short <- get(test_short_col) %>% rbind(., test_empty_col)
get(test_short_col)
get(test_short_col) %>% rbind()
test_empty_col
get(test_short_col) %>% rbind()
get(test_short_col) %>% rbind(., test_empty_col)
?rbind
rbind(., test_empty_col)
rbind(test_author, test_empty_col)
test_author
test_empty_col
col_list <- c(title, author, link)
col_list <- c(test_title, test_author, test_link)
col_list[names(col_list) != sym(test_short_col)]
col_list
sym(test_short_col)
col_list[names(col_list) != sym(test_short_col)]
col_list[names(col_list) != test_short_col]
col_list[col_list != test_short_col]
col_list[names(col_list) %in% sym(test_short_col) == FALSE]
col_list[names(col_list) %in% test_short_col == FALSE]
col_list[sym(test_short_col) %in% names(col_list) == FALSE]
list.remove(col_list, sym(test_short_col))
??list.remove
install.packages(rlist)
install.packages("rlist")
??list.remove
rlist::list.remove(col_list, sym(test_short_col))
test_col_list <- rlist::list.remove(col_list, sym(test_short_col))
test_col_list
col_list
col_list <- c("title", "author", "link")
col_list
col_list - "author"
name(col_list)
names(col_list)
str(col_list)
col_list[col_list != short_col]
col_list[col_list != test_short_col]
col_list[col_list != sym(test_short_col)]
sym(test_short_col)
test_col_list <- c("test_title", "test_author", "test_link")
test_col_list[test_col_list != sym(test_short_col)]
test_col_list[1]
get(test_col_list[1])
#function to pull list information from google scholar alerts----
get_scholar_links <- function(x){
print(x)
x <- gm_message(x, format = "full")
x_body <- gm_body(x, format = FULL, type = "text/html") %>% unlist()
x_html <- read_html(x_body)
title <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
author <- x_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
link <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
#clean_link <- mutate(link, url = str_replace(url, "http://scholar\\.google\\.com/scholar_url\\?url=", "") %>%
#str_extract("[:graph:]+(?=&hl=)"))
merge_df <- if(nrow(title) == nrow(author) &  nrow(title) == nrow(link) & nrow(author) == nrow(link)){
cbind(title, author, link)
}else{
attribute_df <- tibble(
title = nrow(title),
author = nrow(author),
link = nrow(link))
col_list <- c("title", "author", "link")
max_df <- max(attribute_df)
min_df <- min(attribute_df)
num_rows <- max_df - min_df
short_col <- colnames(attribute_df)[which.min(apply(attribute_df,MARGIN=2,min))]
col_list <- col_list[col_list != sym(short_col)]
empty_col <- replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
cbind(get(col_list[1]), get(col_list[2]), fix_short)
}
return(merge_df)
}
all_google_links <- map_dfr(message_gs_ids, get_scholar_links)
message_gs_ids <- unlist_gs_message %>%
as_tibble(.name_repair = "universal", rownames = "NA") %>%
gather("message", "id") %>%
mutate(id = unlist(id)) %>%
filter(str_detect(message, "message") == TRUE) %>%
distinct() %>% pull(id)
#function to pull list information from google scholar alerts----
get_scholar_links <- function(x){
print(x)
x <- gm_message(x, format = "full")
x_body <- gm_body(x, format = FULL, type = "text/html") %>% unlist()
x_html <- read_html(x_body)
title <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
author <- x_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
link <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
#clean_link <- mutate(link, url = str_replace(url, "http://scholar\\.google\\.com/scholar_url\\?url=", "") %>%
#str_extract("[:graph:]+(?=&hl=)"))
merge_df <- if(nrow(title) == nrow(author) &  nrow(title) == nrow(link) & nrow(author) == nrow(link)){
cbind(title, author, link)
}else{
attribute_df <- tibble(
title = nrow(title),
author = nrow(author),
link = nrow(link))
col_list <- c("title", "author", "link")
max_df <- max(attribute_df)
min_df <- min(attribute_df)
num_rows <- max_df - min_df
short_col <- colnames(attribute_df)[which.min(apply(attribute_df,MARGIN=2,min))]
col_list <- col_list[col_list != sym(short_col)]
empty_col <- replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
cbind(get(col_list[1]), get(col_list[2]), fix_short)
}
return(merge_df)
}
all_google_links <- map_dfr(message_gs_ids, get_scholar_links)
message_gs_ids
get_scholar_links(17dfe8ea10ea8e32)
get_scholar_links("17dfe8ea10ea8e32")
x <- "17dfe8ea10ea8e32"
x <- gm_message(x, format = "full")
x_body <- gm_body(x, format = FULL, type = "text/html") %>% unlist()
x_html <- read_html(x_body)
title <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
author <- x_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
link <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
merge_df <- if(nrow(title) == nrow(author) &  nrow(title) == nrow(link) & nrow(author) == nrow(link)){
cbind(title, author, link)
}else{
attribute_df <- tibble(
title = nrow(title),
author = nrow(author),
link = nrow(link))
col_list <- c("title", "author", "link")
max_df <- max(attribute_df)
min_df <- min(attribute_df)
num_rows <- max_df - min_df
short_col <- colnames(attribute_df)[which.min(apply(attribute_df,MARGIN=2,min))]
col_list <- col_list[col_list != sym(short_col)]
empty_col <- replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
cbind(get(col_list[1]), get(col_list[2]), fix_short)
}
nrow(title) == nrow(author) &  nrow(title) == nrow(link) & nrow(author) == nrow(link)
attribute_df <- tibble(
title = nrow(title),
author = nrow(author),
link = nrow(link))
View(attribute_df)
col_list <- c("title", "author", "link")
max_df <- max(attribute_df)
min_df <- min(attribute_df)
num_rows <- max_df - min_df
short_col <- colnames(attribute_df)[which.min(apply(attribute_df,MARGIN=2,min))]
col_list <- col_list[col_list != sym(short_col)]
empty_col <- replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
replicate(num_rows, rbind(""))
as_tibble_col(., column_name = as.character(sym(short_col)))
replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
empty_col <- replicate(num_rows, rbind("")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
empty_col <- replicate(num_rows, rbind("-")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% cbind(empty_col)
get(short_col)
fix_short <- get(short_col) %>% rbind(empty_col)
cbind(get(col_list[1]), get(col_list[2]), fix_short)
#function to pull list information from google scholar alerts----
get_scholar_links <- function(x){
print(x)
x <- gm_message(x, format = "full")
x_body <- gm_body(x, format = FULL, type = "text/html") %>% unlist()
x_html <- read_html(x_body)
title <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_text() %>%
enframe(name = NULL) %>% rename(title = "value")
author <- x_html %>% xml_find_all('//div[@style="color:#006621"]') %>% html_text(trim = TRUE) %>%
enframe(name = NULL) %>%   rename(author = "value")
link <- x_html %>% xml_find_all('//a[@class="gse_alrt_title"]') %>% html_attr("href") %>%
enframe(name = NULL) %>% rename(url = "value")
#clean_link <- mutate(link, url = str_replace(url, "http://scholar\\.google\\.com/scholar_url\\?url=", "") %>%
#str_extract("[:graph:]+(?=&hl=)"))
merge_df <- if(nrow(title) == nrow(author) &  nrow(title) == nrow(link) & nrow(author) == nrow(link)){
cbind(title, author, link)
}else{
attribute_df <- tibble(
title = nrow(title),
author = nrow(author),
link = nrow(link))
col_list <- c("title", "author", "link")
max_df <- max(attribute_df)
min_df <- min(attribute_df)
num_rows <- max_df - min_df
short_col <- colnames(attribute_df)[which.min(apply(attribute_df,MARGIN=2,min))]
col_list <- col_list[col_list != sym(short_col)]
empty_col <- replicate(num_rows, rbind("-")) %>% as_tibble_col(., column_name = as.character(sym(short_col)))
fix_short <- get(short_col) %>% rbind(empty_col)
cbind(get(col_list[1]), get(col_list[2]), fix_short)
}
return(merge_df)
}
all_google_links <- map_dfr(message_gs_ids, get_scholar_links)
